<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 리소스들은 서블릿요청에서 제외해준다. 이미지같은것 불러올때 사용하기 위해 리소스폴더에 넣어줌 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 웹 inf아래에 뷰즈아래에 jsp파일들을 뷰로 하겠다. -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 객체를 스프링이 만들어줌 new연산자 없이, com.jjdev.mvc아래에 있는 클래스들은 객체를 만들어주겠다.
	약속된 어노테이션을 붙여주면. -->
	<context:component-scan base-package="com.pineapple"/>
	
	
	<!-- 인터셉터로 url 요청이 왔을때 전or후에 거쳐야 할 과정을 추가 해줌 // ex) 로그인 여부 검사 -->
	<mvc:interceptors>
		<!-- 모든 url 요청에 대해 거쳐가는 인터셉터 -->
		<mvc:interceptor>		
			<mvc:mapping path="/*"/>	
			<bean class="com.pineapple.CommonInterceptor"></bean>
		</mvc:interceptor>
		
		<!-- 인터셉터 추가 가능 -->
		<mvc:interceptor>		
			<mvc:mapping path="/*"/>	
			<bean class="com.pineapple.CommonLoggerInterceptor"></bean>
		</mvc:interceptor>
		
	</mvc:interceptors>
		
		
	<!-- 커넥션 풀 설정 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- war배포할때에 localhost // 원격 작업할때는 jack716.cafe24.com  -->
        <!-- <property name="url" value="jdbc:mysql://localhost:3306/jack716?useUnicode=true&amp;characterEncoding=utf8"/> -->
        <property name="url" value="jdbc:mysql://jack716.cafe24.com:3306/jack716?useUnicode=true&amp;characterEncoding=utf8"/>
        <property name="username" value="jack716"/>
        <property name="password" value="shguscjf12"/>
    </bean>
    
     <!-- mybatis설정 1. SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <property name="mapperLocations">
            <list>
            	<value>classpath:com/pineapple/funding/service/FundingMapper.xml</value>
                <value>classpath:com/pineapple/invest/service/InvestMapper.xml</value>
                <value>classpath:com/pineapple/user/service/UserMapper.xml</value>
                <value>classpath:com/pineapple/user/service/MypageMapper.xml</value>
                <value>classpath:com/pineapple/pms/service/PmsMapper.xml</value>
                <value>classpath:com/pineapple/timeline/service/TimelineMapper.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- mybatis설정 2. SqlSessionTemplate-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    
    
    
    <!-- Multipart/form-data를 사용하기 위한 multipartResolver설정 // 파일업로드 관련 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 최대용량을 10메가로 설정해둠. 넘을시 에러가 뜸. -->
		<property name="maxUploadSize" value="10000000" />
		<property name="maxInMemorySize" value="10000000" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	
	<!-- 파일 다운로드 요청의 응답을 뷰로 리턴할 클래스를 빈으로 지정  -->
	<bean id="fileDownloadView" class="com.pineapple.util.FileDownloadView"/>
	<bean id="fileViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <property name="order" value="0"/>
	</bean>
	
</beans>